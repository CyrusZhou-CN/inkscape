# Dependencies are managed in the Dockerfile in the inkscape-ci-docker
# Git repository. Change them there, wait a bit, and then we'll use
# the new ones here in these builds.
image: registry.gitlab.com/inkscape/inkscape-ci-docker/master


# This file is structured in four parts:
# I) definitions
# II) build jobs
# III) checks that are run on merge requests
# IV) building inkscape.gitlab.io/inkscape (doc and scan)
#


#######################
#                     #
#     Definitions     #
#                     #
#######################

# all jobs are safe to interrupt
default:
  interruptible: true
  artifacts:
    name: "$CI_JOB_NAME-$CI_COMMIT_REF_NAME"
  timeout: 3h


#speedup git on runners
variables:
  GIT_DEPTH: "10"
  GIT_SUBMODULE_STRATEGY: recursive

#reusable templates
.ccache_init: &ccache_init
  before_script:
    - mkdir -p ccache
    - export CCACHE_BASEDIR=${PWD}
    - export CCACHE_DIR=${PWD}/ccache

.cmake: &cmake
- mkdir -p build/conf
- cd build
- cmake .. -DCMAKE_C_COMPILER_LAUNCHER=ccache -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DCMAKE_BUILD_TYPE=Debug -DCMAKE_INSTALL_PREFIX:PATH=$PWD/install_dir/ -DCMAKE_EXPORT_COMPILE_COMMANDS=ON

# basic workflow setup:
# - run pipelines for all branches without an open MR
# - run MR pipeline only as soon as an MR is opened
workflow:
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
    - if: '$CI_COMMIT_BRANCH && $CI_OPEN_MERGE_REQUESTS'
      when: never
    - if: '$CI_COMMIT_BRANCH'

.run_MR: &run_for_MR
  if: '$CI_MERGE_REQUEST_ID'

.run_no_MR: &do_not_run_for_MR
  if: '$CI_MERGE_REQUEST_ID'
  when: never

.run_no_schedules: &do_not_run_for_schedules
  if: '$CI_PIPELINE_SOURCE == "schedule"'
  when: never

.run_otherwise: &run_otherwise
  when: on_success


#######################
#                     #
#  Building inkscape  #
#                     #
#######################
# Linux, Appimage, macOS, Windows.


inkscape:macos:arm:
  stage: build
  tags:
    - macarm
  rules:
    - *do_not_run_for_schedules
    # Mac runner is restricted to "inkscape" and "dehesselle" namespaces; only generate pipelines for those
    - if: '$CI_PROJECT_NAMESPACE == "inkscape"'
    - if: '$CI_PROJECT_NAMESPACE == "dehesselle"'
  variables:
    SDKROOT: /opt/sdks/MacOSX11.3.sdk
    INK_BUILD: $CI_PIPELINE_IID
  script:
    - packaging/macos/build.sh
  artifacts:
    expire_in: 1 year
    paths:
      - Inkscape*.dmg
      - toolset_overlay.tar.xz


inkscape:macos:x64:
  extends: inkscape:macos:arm
  tags:
    - shared-macos-amd64
  image: macos-12-xcode-13
  variables:
    CCACHE_DIR: $CI_PROJECT_DIR/ccache
    SYS_USRLOCAL_IGNORE: "true"
    SDKROOT: ""
    MACOSX_DEPLOYMENT_TARGET: "10.13"
  cache:
    key: "cache-macos"
    paths:
      - $CI_PROJECT_DIR/ccache


test:macos:x64:
  extends: inkscape:macos:x64
  stage: test
  dependencies:
    - inkscape:macos:x64
  needs: ["inkscape:macos:x64"]
  script:
    - packaging/macos/test.sh
  artifacts:
    paths:
      - testfiles.tar.xz
    when: on_failure